
import edu.isi.bmkeg.pdf.classification.ruleBased.RuleBasedChunkClassifier;
import edu.isi.bmkeg.pdf.extraction.exceptions.AccessException;
import edu.isi.bmkeg.pdf.extraction.exceptions.EncryptionException;
import edu.isi.bmkeg.pdf.model.ChunkBlock;
import edu.isi.bmkeg.pdf.model.Document;
import edu.isi.bmkeg.pdf.model.RTree.RTChunkBlock;
import edu.isi.bmkeg.pdf.model.RTree.RTModelFactory;
import edu.isi.bmkeg.pdf.model.ordering.SpatialOrdering;
import edu.isi.bmkeg.pdf.parser.RuleBasedParser;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.jpedal.exception.PdfException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Samih
 */
public class Interface extends javax.swing.JFrame {

    private int pageNumb;
    private Document pdf;
    RuleBasedParser rbp;

    private Boolean horiz, vert, fin, analys;

    /**
     * Creates new form Interface
     */
    public void classify() {
        RuleBasedChunkClassifier classifier = new RuleBasedChunkClassifier("src/main/resources/rules/rules.drl", new RTModelFactory());
        for (int i = 0; i < pdf.getPageList().size(); i++) {
            classifier.classify(pdf.getPageList().get(i).getAllChunkBlocks(SpatialOrdering.COLUMN_AWARE_MIXED_MODE));
        }
    }

    public Interface() {
        initComponents();
        rbp = new RuleBasedParser(new RTModelFactory());
        pageNumb = 0;
        filepath.setText(System.getProperty("user.dir") + "/test.pdf");
        rulepath.setText(System.getProperty("user.dir") + "/src/main/resources/rules/rules.drl");
        horiz = true;
        vert = true;
        fin = true;
        analys = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        parc1 = new javax.swing.JButton();
        filepath = new javax.swing.JTextField();
        parc = new javax.swing.JButton();
        charg = new javax.swing.JButton();
        prec = new javax.swing.JButton();
        suiv = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        mots = new javax.swing.JCheckBox();
        sensib = new javax.swing.JSlider();
        precis = new javax.swing.JLabel();
        tolerY = new javax.swing.JSlider();
        tolY = new javax.swing.JLabel();
        analyse = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        vertFus = new javax.swing.JCheckBox();
        horizFus = new javax.swing.JCheckBox();
        tauxVert = new javax.swing.JTextField();
        tauxHoriz = new javax.swing.JTextField();
        finParFus = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        label = new javax.swing.JCheckBox();
        rulepath = new javax.swing.JTextField();
        parcrule = new javax.swing.JButton();
        style = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        anarogn = new javax.swing.JButton();
        rogn = new javax.swing.JButton();
        rognraz = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        chevauch = new javax.swing.JCheckBox();
        masterbutton = new javax.swing.JButton();

        parc1.setText("Parcourir");
        parc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parc1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        parc.setText("Parcourir");
        parc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcActionPerformed(evt);
            }
        });

        charg.setText("Charger le PDF");
        charg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargActionPerformed(evt);
            }
        });

        prec.setText("Préc.");
        prec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precActionPerformed(evt);
            }
        });

        suiv.setText("Suiv.");
        suiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suivActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setText("LaToe 2.0");

        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel.setAlignmentX(324.0F);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 867, Short.MAX_VALUE)
        );

        mots.setText("Afficher mots");
        mots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motsActionPerformed(evt);
            }
        });

        sensib.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sensibStateChanged(evt);
            }
        });

        precis.setText("Tolérance X : 50%");

        tolerY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tolerYStateChanged(evt);
            }
        });

        tolY.setText("Tolérance Y : 50%");

        analyse.setText("Analyse post-parsing");
        analyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyseActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 102, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Paramètres de l'analyse");

        vertFus.setSelected(true);
        vertFus.setText("Fusion verticale");
        vertFus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vertFusActionPerformed(evt);
            }
        });

        horizFus.setSelected(true);
        horizFus.setText("Fusion horizontale");
        horizFus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horizFusActionPerformed(evt);
            }
        });

        tauxVert.setText("1.5");
        tauxVert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tauxVertActionPerformed(evt);
            }
        });

        tauxHoriz.setText("1.0");

        finParFus.setSelected(true);
        finParFus.setText("Fusion fin de paragraphe");
        finParFus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finParFusActionPerformed(evt);
            }
        });

        jButton1.setText("Actualiser");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setText("Labellisation");

        label.setText("Labelliser");
        label.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelActionPerformed(evt);
            }
        });

        parcrule.setText("Sélectionner fichier de règles");
        parcrule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcruleActionPerformed(evt);
            }
        });

        style.setText("Filtrer style");
        style.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setText("Redéfinition des bords");

        anarogn.setText("Analyser");
        anarogn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anarognActionPerformed(evt);
            }
        });

        rogn.setText("Rogner");
        rogn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rognActionPerformed(evt);
            }
        });

        rognraz.setText("RAZ");
        rognraz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rognrazActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setText("Blocs sur plusieurs pages");

        chevauch.setText("Analyser");
        chevauch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chevauchActionPerformed(evt);
            }
        });

        masterbutton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        masterbutton.setForeground(new java.awt.Color(204, 0, 0));
        masterbutton.setText("Traitement complet");
        masterbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(prec)
                                        .addGap(18, 18, 18)
                                        .addComponent(charg, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(suiv)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mots)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(style)
                                        .addGap(29, 29, 29))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(parc)
                                        .addGap(10, 10, 10))))
                            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(analyse)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(vertFus)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(tauxVert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(horizFus)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tauxHoriz, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(finParFus))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(label)
                                                .addComponent(jButton1))
                                            .addGap(31, 31, 31)))
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(rulepath, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(parcrule)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(rognraz))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(chevauch))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(anarogn)
                                .addGap(18, 18, 18)
                                .addComponent(rogn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(masterbutton))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(precis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sensib, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tolY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tolerY, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filepath, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tolY)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sensib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(precis))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tolerY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(charg)
                            .addComponent(prec)
                            .addComponent(suiv)
                            .addComponent(mots)
                            .addComponent(style))
                        .addGap(18, 18, 18)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(analyse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vertFus)
                            .addComponent(tauxVert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(horizFus)
                            .addComponent(tauxHoriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(finParFus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rulepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(parcrule)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(anarogn)
                            .addComponent(rogn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rognraz)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chevauch)
                        .addGap(18, 18, 18)
                        .addComponent(masterbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chargActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargActionPerformed
        // TODO add your handling code here:

        try {
            pdf=null;
            this.pdf = rbp.parse(filepath.getText());
        } catch (PdfException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EncryptionException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (pdf != null) {
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
            rbp.affichagexy();
        }
    }//GEN-LAST:event_chargActionPerformed

    private void precActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precActionPerformed
        // TODO add your handling code here:
        if (pageNumb > 0) {
            pageNumb--;
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_precActionPerformed

    private void suivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suivActionPerformed
        // TODO add your handling code here:
        if (pageNumb < pdf.getPageList().size() - 1) {
            pageNumb++;
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_suivActionPerformed

    private void parcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        if (fc.showOpenDialog(fc) == JFileChooser.APPROVE_OPTION) {
            filepath.setText(fc.getSelectedFile().getAbsolutePath());
        }

    }//GEN-LAST:event_parcActionPerformed

    private void motsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motsActionPerformed
        // TODO add your handling code here:
        if (pdf != null) {
            if (mots.isSelected()) {
                pdf.setWords(true);
                pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
            } else {
                pdf.setWords(false);
                pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
            }
        }
    }//GEN-LAST:event_motsActionPerformed

    private void sensibStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sensibStateChanged
        // TODO add your handling code here:
        float mult = (float) (sensib.getValue() / 100.0);
        float mult2 = (float) (tolerY.getValue() / 100.0);
        rbp.setMult(mult, mult2);
        precis.setText("Tolérance X : " + sensib.getValue() + "%");
    }//GEN-LAST:event_sensibStateChanged

    private void tolerYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tolerYStateChanged
        // TODO add your handling code here:
        float mult = (float) (sensib.getValue() / 100.0);
        float mult2 = (float) (tolerY.getValue() / 100.0);
        rbp.setMult(mult, mult2);
        tolY.setText("Tolérance Y : " + tolerY.getValue() + "%");
    }//GEN-LAST:event_tolerYStateChanged

    private void analyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseActionPerformed
        // TODO add your handling code here:
        if (pdf != null) {
            if (analyse.isSelected()) {
                while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
                }
                analys = true;
            } else {
                try {
                    pdf=null;
                    this.pdf = rbp.parse(filepath.getText());
                } catch (PdfException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (AccessException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (EncryptionException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_analyseActionPerformed

    private void vertFusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vertFusActionPerformed
        // TODO add your handling code here:
        if (vertFus.isSelected()) {
            vert = true;
        } else {
            vert = false;
        }
        if (analys) {
            try {
                pdf=null;
                this.pdf = rbp.parse(filepath.getText());
            } catch (PdfException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AccessException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (EncryptionException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
            }
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_vertFusActionPerformed

    private void horizFusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horizFusActionPerformed
        // TODO add your handling code here:
        if (horizFus.isSelected()) {
            horiz = true;
        } else {
            horiz = false;
        }
        if (analys) {
            try {
                pdf=null;
                this.pdf = rbp.parse(filepath.getText());
            } catch (PdfException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AccessException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (EncryptionException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
            }
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_horizFusActionPerformed

    private void finParFusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finParFusActionPerformed
        // TODO add your handling code here:
        if (finParFus.isSelected()) {
            fin = true;
        } else {
            fin = false;
        }
        if (analys) {
            try {
                pdf=null;
                this.pdf = rbp.parse(filepath.getText());
            } catch (PdfException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AccessException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (EncryptionException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
            }
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_finParFusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            pdf=null;
            this.pdf = rbp.parse(filepath.getText());
        } catch (PdfException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EncryptionException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (analys) {
            while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
            }
        }
        pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void parc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parc1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parc1ActionPerformed

    private void parcruleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcruleActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        if (fc.showOpenDialog(fc) == JFileChooser.APPROVE_OPTION) {
            rulepath.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_parcruleActionPerformed

    private void labelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelActionPerformed
        // TODO add your handling code here:
        if (pdf != null) {
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_labelActionPerformed

    private void styleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleActionPerformed
        // TODO add your handling code here:
        rbp.setChangementStyle(style.isSelected());
        chargActionPerformed(evt);
    }//GEN-LAST:event_styleActionPerformed

    private void anarognActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anarognActionPerformed
        // TODO add your handling code here:
        if (pdf != null) {
            pdf.rognerAnalyse();
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_anarognActionPerformed

    private void rognActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rognActionPerformed
        // TODO add your handling code here:
        if (pdf != null) {
            pdf.rognerAction();
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
        pdf.setAnalyse(false);
    }//GEN-LAST:event_rognActionPerformed

    private void rognrazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rognrazActionPerformed
        // TODO add your handling code here:
        try {
            pdf=null;
            this.pdf = rbp.parse(filepath.getText());
        } catch (PdfException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EncryptionException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (analys) {
            while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
            }
        }
        pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        pdf.setAnalyse(false);
    }//GEN-LAST:event_rognrazActionPerformed

    private void chevauchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chevauchActionPerformed
        // TODO add your handling code here:
        if (chevauch.isSelected()) {

            pdf.verifSuite();
        }
        if (pdf != null) {
            pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
        }
    }//GEN-LAST:event_chevauchActionPerformed

    private void masterbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterbuttonActionPerformed
        pdf=null;
        label.setSelected(true);
        analyse.setSelected(true);
        chevauch.setSelected(true);
        analys=true;
        try {
            this.pdf = rbp.parse(filepath.getText());
        } catch (PdfException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EncryptionException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        while (pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText())) > pdf.joinBlocks(vert, horiz, fin, Float.parseFloat(tauxVert.getText()), Float.parseFloat(tauxHoriz.getText()))) {
        }
        analys = true;
        pdf.rognerAnalyse();
        pdf.rognerAction();
        pdf.verifSuite();
        pdf.affichage(pageNumb, panel, rulepath.getText(), label.isSelected());
    }//GEN-LAST:event_masterbuttonActionPerformed

    private void tauxVertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tauxVertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tauxVertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Interface i = new Interface();
                i.setTitle("LaToe 2.0");
                i.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox analyse;
    private javax.swing.JButton anarogn;
    private javax.swing.JButton charg;
    private javax.swing.JCheckBox chevauch;
    private javax.swing.JTextField filepath;
    private javax.swing.JCheckBox finParFus;
    private javax.swing.JCheckBox horizFus;
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox label;
    private javax.swing.JButton masterbutton;
    private javax.swing.JCheckBox mots;
    private javax.swing.JPanel panel;
    private javax.swing.JButton parc;
    private javax.swing.JButton parc1;
    private javax.swing.JButton parcrule;
    private javax.swing.JButton prec;
    private javax.swing.JLabel precis;
    private javax.swing.JButton rogn;
    private javax.swing.JButton rognraz;
    private javax.swing.JTextField rulepath;
    private javax.swing.JSlider sensib;
    private javax.swing.JCheckBox style;
    private javax.swing.JButton suiv;
    private javax.swing.JTextField tauxHoriz;
    private javax.swing.JTextField tauxVert;
    private javax.swing.JLabel tolY;
    private javax.swing.JSlider tolerY;
    private javax.swing.JCheckBox vertFus;
    // End of variables declaration//GEN-END:variables
}
